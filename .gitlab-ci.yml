services:
  - docker:dind

stages:
  - build
  - package  
  - deploy

docker-build:
  image: node:14-slim
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
    - if: $CI_COMMIT_BRANCH == "staging"
    - if: $CI_COMMIT_BRANCH == "master"

  script:
    - |
      npm install -ff
    
      if [ "$CI_COMMIT_BRANCH" = "dev" ] || [ "$CI_COMMIT_BRANCH" = "staging"  ]; then 
         npm run build:ssr:staging; 
      else npm run build:ssr; 
      fi
      
  artifacts:
    paths:
      - $CI_PROJECT_DIR/dist
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

package:
  image: docker:latest
  stage: package
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
    - if: $CI_COMMIT_BRANCH == "staging"
    - if: $CI_COMMIT_BRANCH == "master"
    
  script:
    - echo "Installing doctl"
    - mkdir tmp; cd tmp; wget https://github.com/digitalocean/doctl/releases/download/v1.92.0/doctl-1.92.0-linux-amd64.tar.gz
    - tar xf doctl-1.92.0-linux-amd64.tar.gz
    - mv doctl /usr/local/bin  && cd ..
    - doctl auth init -t   ${DIGITALOCEAN_ACCESS_TOKEN}
    - doctl auth list
    - doctl registry login
    - echo "Building Docker image..."
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - echo "Tagging Docker image for DigitalOcean registry..."
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA registry.digitalocean.com/castille/castille-website:$CI_COMMIT_SHORT_SHA
    - echo "Showing the docker images list"
    - docker images 
    - echo "Pushing Docker image to DigitalOcean registry..."
    - docker push registry.digitalocean.com/castille/castille-website:$CI_COMMIT_SHORT_SHA

deploy-prod:
  stage: deploy
  when: manual
  image: alpine/doctl:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
    - if: $CI_COMMIT_BRANCH == "staging"
    - if: $CI_COMMIT_BRANCH == "master"
    
  variables:
    KUBE_NAMESPACE: default
  before_script:
    - apk add --no-cache curl
    - doctl auth init -t ${DIGITALOCEAN_ACCESS_TOKEN}
  script:
    - |
    
      if [ "$CI_COMMIT_BRANCH" = "master" ]; then
          doctl kubernetes cluster kubeconfig save  k8s-castillians-prod;
      else
          doctl kubernetes cluster kubeconfig save  k8s-castillians-dev;
      fi


      if [ "$CI_COMMIT_BRANCH" = "master" ]; then 
          ENV=prod
          sed -i "s/<ENV>/$ENV/g" deploy.yaml
          sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" deploy.yaml
          kubectl apply -f deploy.yaml ;

      elif [ "$CI_COMMIT_BRANCH" = "staging" ]; then
          ENV=staging
          sed -i "s/<ENV>/$ENV/g" deploy.yaml
          sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" deploy.yaml
          kubectl apply -f deploy.yaml ;

      else 
          ENV=dev
          sed -i "s/<ENV>/$ENV/g" deploy.yaml
          sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" deploy.yaml
          kubectl apply -f deploy.yaml ;
      fi
 
# image: registry.digitalocean.com/castille/castille-website:c3595117
